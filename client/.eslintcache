[{"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\index.js":"1","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\App.js":"2","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Landing.js":"3","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\auth\\Register.js":"5","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\auth\\Login.js":"6","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\store.js":"7","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\index.js":"8","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\alert.js":"9","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\types.js":"10","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\alert.js":"11","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Alert.js":"12","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\auth.js":"13","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\auth.js":"14","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\utils\\setAuthToken.js":"15","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\routing\\PrivateRoute.js":"17","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\profile.js":"18","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\profile.js":"19","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Spinner.js":"20","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\DashboardActions.js":"22","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\EditProfile.js":"23","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\AddExperience.js":"24","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\AddEducation.js":"25","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\Experience.js":"26","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\Education.js":"27","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profiles\\Profiles.js":"28","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profiles\\ProfileItem.js":"29","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile\\Profile.js":"30","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile\\ProfileTop.js":"31","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile\\ProfileAbout.js":"32","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile\\ProfileExperience.js":"33","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile\\ProfileEducation.js":"34","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile\\ProfileGithub.js":"35","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\posts\\Posts.js":"36","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\post.js":"37","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\post.js":"38","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\posts\\PostItem.js":"39"},{"size":196,"mtime":1608529754186,"results":"40","hashOfConfig":"41"},{"size":2384,"mtime":1609546611875,"results":"42","hashOfConfig":"41"},{"size":976,"mtime":1609251227533,"results":"43","hashOfConfig":"41"},{"size":1234,"mtime":1609546700764,"results":"44","hashOfConfig":"41"},{"size":2622,"mtime":1608964774666,"results":"45","hashOfConfig":"41"},{"size":1789,"mtime":1609383535517,"results":"46","hashOfConfig":"41"},{"size":385,"mtime":1608963736241,"results":"47","hashOfConfig":"41"},{"size":243,"mtime":1609545284486,"results":"48","hashOfConfig":"41"},{"size":417,"mtime":1608617219861,"results":"49","hashOfConfig":"41"},{"size":886,"mtime":1609556991410,"results":"50","hashOfConfig":"41"},{"size":347,"mtime":1608796049722,"results":"51","hashOfConfig":"41"},{"size":463,"mtime":1608788574535,"results":"52","hashOfConfig":"41"},{"size":2368,"mtime":1609332626026,"results":"53","hashOfConfig":"41"},{"size":1331,"mtime":1609392896186,"results":"54","hashOfConfig":"41"},{"size":260,"mtime":1608799031285,"results":"55","hashOfConfig":"41"},{"size":1776,"mtime":1609408499041,"results":"56","hashOfConfig":"41"},{"size":472,"mtime":1609221920264,"results":"57","hashOfConfig":"41"},{"size":1291,"mtime":1609508857614,"results":"58","hashOfConfig":"41"},{"size":6294,"mtime":1609493597466,"results":"59","hashOfConfig":"41"},{"size":334,"mtime":1609252168061,"results":"60","hashOfConfig":"41"},{"size":5864,"mtime":1609462723369,"results":"61","hashOfConfig":"41"},{"size":592,"mtime":1609331250340,"results":"62","hashOfConfig":"41"},{"size":8120,"mtime":1609462911177,"results":"63","hashOfConfig":"41"},{"size":2871,"mtime":1609338655760,"results":"64","hashOfConfig":"41"},{"size":2862,"mtime":1609463033088,"results":"65","hashOfConfig":"41"},{"size":1198,"mtime":1609396201368,"results":"66","hashOfConfig":"41"},{"size":1186,"mtime":1609408140029,"results":"67","hashOfConfig":"41"},{"size":1107,"mtime":1609462664156,"results":"68","hashOfConfig":"41"},{"size":1051,"mtime":1609558334887,"results":"69","hashOfConfig":"41"},{"size":3788,"mtime":1609502981694,"results":"70","hashOfConfig":"41"},{"size":2155,"mtime":1609471264377,"results":"71","hashOfConfig":"41"},{"size":840,"mtime":1609490777927,"results":"72","hashOfConfig":"41"},{"size":670,"mtime":1609493553035,"results":"73","hashOfConfig":"41"},{"size":764,"mtime":1609493650817,"results":"74","hashOfConfig":"41"},{"size":1736,"mtime":1609508458212,"results":"75","hashOfConfig":"41"},{"size":955,"mtime":1609547325890,"results":"76","hashOfConfig":"41"},{"size":1875,"mtime":1609557458211,"results":"77","hashOfConfig":"41"},{"size":1090,"mtime":1609557315135,"results":"78","hashOfConfig":"41"},{"size":2102,"mtime":1609557907688,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1but6sh",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\index.js",[],["171","172"],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\App.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\store.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\index.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\alert.js",["173"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types'\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action){\r\n    const {type, payload } = action;\r\n\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\types.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\alert.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\auth.js",["174"],"import axios from 'axios';\r\nimport { setAlert } from './alert'\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport setAuthtoken from '../utils/setAuthToken';\r\n\r\n//Load User\r\nexport const loadUser = () => async dispatch => {\r\n    if(localStorage.token){\r\n        setAuthtoken(localStorage.token)\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/auth')\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\n//Register user\r\nexport const register = ({ name, email, password }) =>  async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({name, email, password })\r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        dispatch(loadUser())\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL,\r\n        })\r\n    }\r\n}\r\n\r\n//login user\r\nexport const login = (email, password) =>  async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({ email, password })\r\n\r\n    try {\r\n        const res = await axios.post('/api/auth', body, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loadUser())\r\n\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n        })\r\n    }\r\n}\r\n\r\n// Logout / Clear Profile\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    })\r\n    \r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\auth.js",["175"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    DELETE_ACCOUNT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action; \r\n    \r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token)\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case DELETE_ACCOUNT:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\Dashboard.js",["176","177"],"import React, {Fragment, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadUser } from '../../actions/auth';\r\nimport { getCurrentProfile, deleteAccount} from '../../actions/profile'; \r\nimport Spinner from '../layout/Spinner';\r\nimport {Link} from 'react-router-dom'\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\n\r\nconst Dashboard = ({deleteAccount, getCurrentProfile, auth: {user}, profile: {profile, loading}}) => {\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile])\r\n\r\n    return ( \r\n    <Fragment>\r\n        <h1 className='large text-primary'>Dashboard</h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Welcome {user && user.name}</p>\r\n        {profile !== null ? (\r\n                <Fragment>\r\n                    <DashboardActions/>\r\n                    <Experience experience = {profile.experience} />\r\n                    <Education education = {profile.education} />\r\n                    <div>\r\n                        <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n                            <i className=\"fas fa-user-minus\"> Delete Account</i>\r\n                        </button>\r\n                    </div>\r\n                </Fragment>\r\n            ) : (\r\n                <Fragment>\r\n                    <p>Please setup your profile</p>\r\n                    <Link to='/create-profile' className='btn-btn primary my-1'>Create Profile</Link>\r\n                </Fragment>)}\r\n    </Fragment>\r\n    )}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCurrentProfile, deleteAccount}) (Dashboard)\r\n","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\profile.js",["178"],"import { CLEAR_PROFILE, GET_PROFILE, GET_PROFILES, PROFILE_ERROR, UPDATE_PROFILE, GET_REPOS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            }\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            }\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n                profile: null\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            }\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\profile.js",["179"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, DELETE_ACCOUNT, CLEAR_PROFILE, GET_PROFILES, GET_REPOS } from './types';\r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE })\r\n\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//get profile by ID\r\nexport const getProfileById = (userId) => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//get github repos\r\nexport const getGithubRepos = (username) => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert(edit ? 'Profile updated' : 'Profile created', 'success'));\r\n\r\n        if (!edit) {\r\n            history.push('/dashboard')\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//add experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Experience added!', 'success'));\r\n\r\n        history.push('/dashboard')\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//add education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Education added!', 'success'));\r\n\r\n        history.push('/dashboard')\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//delete experience\r\nexport const deleteExperience = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Experience removed!', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//delete education\r\nexport const deleteEducation = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Education removed!', 'success'));\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//delete account and profile\r\nexport const deleteAccount = (id) => async dispatch => {\r\n    if (window.confirm('Are you sure? This can NOT be undone')) {\r\n        try {\r\n            const res = await axios.delete('/api/profile');\r\n\r\n            dispatch({ type: CLEAR_PROFILE })\r\n            dispatch({ type: DELETE_ACCOUNT })\r\n\r\n            dispatch(setAlert('Your account has been permanently deleted!', 'success'));\r\n\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            })\r\n        }\r\n    }\r\n}","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Spinner.js",["180"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => {\r\n    return (\r\n        <Fragment>\r\n            <img \r\n            src={spinner}\r\n            style={{width: '200px', margin: 'auto', display: 'block'}}\r\n            alt='Loading...' \r\n            />\r\n        </Fragment>\r\n    )\r\n}","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\EditProfile.js",["181"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\",\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? \"\" : profile.company,\r\n      website: loading || !profile.website ? \"\" : profile.website,\r\n      location: loading || !profile.location ? \"\" : profile.location,\r\n      status: loading || !profile.status ? \"\" : profile.status,\r\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\r\n      githubusername:\r\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\r\n      bio: loading || !profile.bio ? \"\" : profile.bio,\r\n      twitter: loading || !profile.social ? \"\" : profile.social.twitter,\r\n      facebook: loading || !profile.social ? \"\" : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? \"\" : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? \"\" : profile.social.youtube,\r\n      instagram: loading || !profile.social ? \"\" : profile.social.instagram,\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\AddExperience.js",["182"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { addExperience } from \"../../actions/profile\";\r\n\r\nconst AddExperience = ({addExperience, history}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    })\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n    const {company, title, location, from, to, current, description} = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class=\"large text-primary\">Add An Experience</h1>\r\n      <p class=\"lead\">\r\n        <i class=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form class=\"form\" onSubmit={e => {\r\n          e.preventDefault();\r\n          addExperience(formData, history)\r\n      }}>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" required value={title} onChange={e => onChange(e)}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Company\" name=\"company\" required value={company} onChange={e => onChange(e)}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <p>\r\n            <input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n                setFormData({...formData, current: !current});\r\n                toggleDisabled(!toDateDisabled);\r\n            }}/> Current Job\r\n          </p>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description} onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n        <Link class=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addExperience })(AddExperience);\r\n","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\AddEducation.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\Education.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profiles\\Profiles.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profiles\\ProfileItem.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile\\Profile.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile\\ProfileExperience.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile\\ProfileEducation.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile\\ProfileGithub.js",["183","184"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username)\r\n    }, [getGithubRepos])\r\n    return <div className=\"profile-github\">\r\n        <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n        {repos === null ? <Spinner /> : (\r\n            repos.map(repo => (\r\n                <div className=\"repo bg-white p-1 my-1\">\r\n                    <div>\r\n                        <h4>\r\n                            <a href={repo.html_url} target='_blank' rel='noopener noreferer'>\r\n                                {repo.name}\r\n                            </a>\r\n                        </h4>\r\n                        <p>{repo.description}</p>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                            <li className='badge badge-primary'>\r\n                                Stars: {repo.stargazers_count}\r\n                            </li>\r\n                            <li className='badge badge-dark'>\r\n                                Watchers: {repo.watchers_count}\r\n                            </li>\r\n                            <li className='badge badge-light'>\r\n                                Forks: {repo.forks_count}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            ))\r\n        )}\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub)\r\n","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\posts\\Posts.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\post.js",["185"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST } from './types'\r\n\r\n//Get Posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('api/posts/');\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//add like\r\nexport const addLike = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`api/posts/like/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { id, likes: res.data }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//add like\r\nexport const removeLike = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`api/posts/unlike/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { id, likes: res.data }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n//delete post\r\nexport const deletePost = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`api/posts/${id}`);\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: id\r\n        })\r\n\r\n        dispatch(setAlert('Post removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\post.js",["186"],"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST } from '../actions/types'\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload),\r\n                loading: false\r\n            }\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => post._id === payload.id ? { ...post, likes: payload.likes } : post),\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\posts\\PostItem.js",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":5,"column":1,"nodeType":"193","endLine":16,"endColumn":2},{"ruleId":"194","severity":1,"message":"195","line":13,"column":8,"nodeType":"196","messageId":"197","endLine":13,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":19,"column":1,"nodeType":"193","endLine":55,"endColumn":2},{"ruleId":"194","severity":1,"message":"198","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":18},{"ruleId":"194","severity":1,"message":"199","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":11,"column":1,"nodeType":"193","endLine":51,"endColumn":2},{"ruleId":"194","severity":1,"message":"200","line":226,"column":19,"nodeType":"196","messageId":"197","endLine":226,"endColumn":22},{"ruleId":"191","severity":1,"message":"201","line":4,"column":1,"nodeType":"193","endLine":14,"endColumn":2},{"ruleId":"202","severity":1,"message":"203","line":62,"column":6,"nodeType":"204","endLine":62,"endColumn":34,"suggestions":"205"},{"ruleId":"194","severity":1,"message":"206","line":2,"column":16,"nodeType":"196","messageId":"197","endLine":2,"endColumn":26},{"ruleId":"202","severity":1,"message":"207","line":9,"column":8,"nodeType":"204","endLine":9,"endColumn":24,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":17,"column":53,"nodeType":"211","endLine":17,"endColumn":68},{"ruleId":"194","severity":1,"message":"200","line":59,"column":15,"nodeType":"196","messageId":"197","endLine":59,"endColumn":18},{"ruleId":"191","severity":1,"message":"192","line":9,"column":1,"nodeType":"193","endLine":41,"endColumn":2},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'setAuthToken' is defined but never used.","Identifier","unusedVar","'loadUser' is defined but never used.","'Spinner' is defined but never used.","'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["214"],"'withRouter' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["215"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"220","text":"221"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"222","text":"223"},[1867,1895],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[314,330],"[getGithubRepos, username]"]