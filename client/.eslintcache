[{"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\index.js":"1","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\App.js":"2","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Landing.js":"3","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\auth\\Register.js":"5","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\auth\\Login.js":"6","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\store.js":"7","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\index.js":"8","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\alert.js":"9","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\types.js":"10","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\alert.js":"11","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Alert.js":"12","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\auth.js":"13","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\auth.js":"14","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\utils\\setAuthToken.js":"15","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\routing\\PrivateRoute.js":"17","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\profile.js":"18","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\profile.js":"19","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Spinner.js":"20","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\DashboardActions.js":"22","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\EditProfile.js":"23","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\AddExperience.js":"24","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\AddEducation.js":"25","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\Experience.js":"26","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\Education.js":"27"},{"size":196,"mtime":1608529754186,"results":"28","hashOfConfig":"29"},{"size":1986,"mtime":1609338565441,"results":"30","hashOfConfig":"29"},{"size":976,"mtime":1609251227533,"results":"31","hashOfConfig":"29"},{"size":1077,"mtime":1609250520536,"results":"32","hashOfConfig":"29"},{"size":2622,"mtime":1608964774666,"results":"33","hashOfConfig":"29"},{"size":1789,"mtime":1609383535517,"results":"34","hashOfConfig":"29"},{"size":385,"mtime":1608963736241,"results":"35","hashOfConfig":"29"},{"size":205,"mtime":1609247852204,"results":"36","hashOfConfig":"29"},{"size":417,"mtime":1608617219861,"results":"37","hashOfConfig":"29"},{"size":634,"mtime":1609391864833,"results":"38","hashOfConfig":"29"},{"size":347,"mtime":1608796049722,"results":"39","hashOfConfig":"29"},{"size":463,"mtime":1608788574535,"results":"40","hashOfConfig":"29"},{"size":2368,"mtime":1609332626026,"results":"41","hashOfConfig":"29"},{"size":1331,"mtime":1609392896186,"results":"42","hashOfConfig":"29"},{"size":260,"mtime":1608799031285,"results":"43","hashOfConfig":"29"},{"size":1466,"mtime":1609396843892,"results":"44","hashOfConfig":"29"},{"size":472,"mtime":1609221920264,"results":"45","hashOfConfig":"29"},{"size":919,"mtime":1609334885683,"results":"46","hashOfConfig":"29"},{"size":4928,"mtime":1609394945528,"results":"47","hashOfConfig":"29"},{"size":334,"mtime":1609252168061,"results":"48","hashOfConfig":"29"},{"size":6104,"mtime":1609333305168,"results":"49","hashOfConfig":"29"},{"size":592,"mtime":1609331250340,"results":"50","hashOfConfig":"29"},{"size":8101,"mtime":1609335421272,"results":"51","hashOfConfig":"29"},{"size":2871,"mtime":1609338655760,"results":"52","hashOfConfig":"29"},{"size":2886,"mtime":1609338518603,"results":"53","hashOfConfig":"29"},{"size":1198,"mtime":1609396201368,"results":"54","hashOfConfig":"29"},{"size":1039,"mtime":1609396213912,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1but6sh",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\index.js",[],["118","119"],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\App.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\store.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\index.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\alert.js",["120"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types'\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action){\r\n    const {type, payload } = action;\r\n\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\types.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\alert.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\auth.js",["121"],"import axios from 'axios';\r\nimport { setAlert } from './alert'\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport setAuthtoken from '../utils/setAuthToken';\r\n\r\n//Load User\r\nexport const loadUser = () => async dispatch => {\r\n    if(localStorage.token){\r\n        setAuthtoken(localStorage.token)\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/auth')\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\n//Register user\r\nexport const register = ({ name, email, password }) =>  async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({name, email, password })\r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        dispatch(loadUser())\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL,\r\n        })\r\n    }\r\n}\r\n\r\n//login user\r\nexport const login = (email, password) =>  async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({ email, password })\r\n\r\n    try {\r\n        const res = await axios.post('/api/auth', body, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loadUser())\r\n\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n        })\r\n    }\r\n}\r\n\r\n// Logout / Clear Profile\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    })\r\n    \r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\auth.js",["122"],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\Dashboard.js",["123","124"],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\reducers\\profile.js",["125"],"import { CLEAR_PROFILE, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            }\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\actions\\profile.js",["126"],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\layout\\Spinner.js",["127"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => {\r\n    return (\r\n        <Fragment>\r\n            <img \r\n            src={spinner}\r\n            style={{width: '200px', margin: 'auto', display: 'block'}}\r\n            alt='Loading...' \r\n            />\r\n        </Fragment>\r\n    )\r\n}","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\EditProfile.js",["128"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\",\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? \"\" : profile.company,\r\n      website: loading || !profile.website ? \"\" : profile.website,\r\n      location: loading || !profile.location ? \"\" : profile.location,\r\n      status: loading || !profile.status ? \"\" : profile.status,\r\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\r\n      githubusername:\r\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\r\n      bio: loading || !profile.bio ? \"\" : profile.bio,\r\n      twitter: loading || !profile.social ? \"\" : profile.social.twitter,\r\n      facebook: loading || !profile.social ? \"\" : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? \"\" : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? \"\" : profile.social.youtube,\r\n      instagram: loading || !profile.social ? \"\" : profile.social.instagram,\r\n    });\r\n  }, [loading]);\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\AddExperience.js",["129"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { addExperience } from \"../../actions/profile\";\r\n\r\nconst AddExperience = ({addExperience, history}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    })\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n    const {company, title, location, from, to, current, description} = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class=\"large text-primary\">Add An Experience</h1>\r\n      <p class=\"lead\">\r\n        <i class=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form class=\"form\" onSubmit={e => {\r\n          e.preventDefault();\r\n          addExperience(formData, history)\r\n      }}>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" required value={title} onChange={e => onChange(e)}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Company\" name=\"company\" required value={company} onChange={e => onChange(e)}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <p>\r\n            <input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n                setFormData({...formData, current: !current});\r\n                toggleDisabled(!toDateDisabled);\r\n            }}/> Current Job\r\n          </p>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description} onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n        <Link class=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addExperience })(AddExperience);\r\n","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\profile-forms\\AddEducation.js",["130"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { addEducation } from \"../../actions/profile\";\r\n\r\nconst AddEducation = ({addEducation, history}) => {\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    })\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n    const {school, degree, fieldofstudy, from, to, current, description} = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class=\"large text-primary\">Add Your Education</h1>\r\n      <p class=\"lead\">\r\n        <i class=\"fas fa-code-branch\"></i> Add any school or bootcamp that you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form class=\"form\" onSubmit={e => {\r\n          e.preventDefault();\r\n          addEducation(formData, history)\r\n      }}>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\" *School or Bootcamp\" name=\"school\" required value={school} onChange={e => onChange(e)}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Degree or Certificate\" name=\"degree\" required value={degree} onChange={e => onChange(e)}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Field of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <p>\r\n            <input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n                setFormData({...formData, current: !current});\r\n                toggleDisabled(!toDateDisabled);\r\n            }}/> Current Job\r\n          </p>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\"\r\n            value={description} onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n        <Link class=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { addEducation })(AddEducation);\r\n","C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\jahmir\\Desktop\\dev_connector\\client\\src\\components\\dashboard\\Education.js",["131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":5,"column":1,"nodeType":"138","endLine":16,"endColumn":2},{"ruleId":"139","severity":1,"message":"140","line":13,"column":8,"nodeType":"141","messageId":"142","endLine":13,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":19,"column":1,"nodeType":"138","endLine":55,"endColumn":2},{"ruleId":"139","severity":1,"message":"143","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":18},{"ruleId":"139","severity":1,"message":"144","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":11,"column":1,"nodeType":"138","endLine":38,"endColumn":2},{"ruleId":"139","severity":1,"message":"145","line":171,"column":19,"nodeType":"141","messageId":"142","endLine":171,"endColumn":22},{"ruleId":"136","severity":1,"message":"146","line":4,"column":1,"nodeType":"138","endLine":14,"endColumn":2},{"ruleId":"147","severity":1,"message":"148","line":62,"column":6,"nodeType":"149","endLine":62,"endColumn":15,"suggestions":"150"},{"ruleId":"139","severity":1,"message":"151","line":2,"column":16,"nodeType":"141","messageId":"142","endLine":2,"endColumn":26},{"ruleId":"139","severity":1,"message":"151","line":2,"column":16,"nodeType":"141","messageId":"142","endLine":2,"endColumn":26},{"ruleId":"139","severity":1,"message":"152","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":17},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'setAuthToken' is defined but never used.","Identifier","unusedVar","'loadUser' is defined but never used.","'Spinner' is defined but never used.","'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["155"],"'withRouter' is defined but never used.","'connect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"158","text":"159"},[1867,1876],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]